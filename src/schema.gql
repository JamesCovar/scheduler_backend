# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Event {
  event_id: String!
  title: String!
  description: String
  start_time: DateTime!
  end_time: DateTime!
  location: String
  userId: String!
  created_at: DateTime
  updated_at: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type UpdatedEventObject {
  success: Boolean!
  rowsAffected: Float!
  message: String!
  code: Float!
  dataUpdated: String
}

type DeletedEventObject {
  success: Boolean!
  rowsAffected: Float!
  message: String!
  code: Float!
  dataDeleted: String
}

type User {
  user_id: String!
  name: String!
  email: String!
  password: String!
}

type BearerTokenInput {
  token: String
}

type Query {
  getEvents(pagination: Pagination!, filter: FilterEventsInput): [Event!]!
  getEvent(eventId: String!): Event!
}

input Pagination {
  first: Float
  offset: Float
}

input FilterEventsInput {
  title: String
  description: String
  start_time: DateTime
  end_time: DateTime
  location: String
}

type Mutation {
  signIn(authCredentials: AuthCredentials!): BearerTokenInput!
  signUp(signUpUserInput: SignUpUserInput!): User!
  updateEvent(event_id: String!, event: UpdateEventInput!): UpdatedEventObject!
  createEvent(createEventInput: CreateEventInput!): Event!
  deleteEvent(event_id: String!): DeletedEventObject!
}

input AuthCredentials {
  email: String!
  password: String
}

input SignUpUserInput {
  name: String!
  email: String!
  password: String!
}

input UpdateEventInput {
  title: String
  description: String
  start_time: DateTime
  end_time: DateTime
  location: String
}

input CreateEventInput {
  title: String!
  description: String
  start_time: DateTime!
  end_time: DateTime!
  location: String
}