# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UpdatedEventObject {
  success: Boolean!
  rowsAffected: Float!
  message: String!
  code: Float!
  dataUpdated: String
}

type DeletedEventObject {
  success: Boolean!
  rowsAffected: Float!
  message: String!
  code: Float!
  dataDeleted: String
}

type EventObject {
  title: String
  description: String
  start_time: DateTime
  end_time: DateTime
  location: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type GetEventObject {
  success: Boolean!
  rowsAffected: Float!
  message: String!
  code: Float!
  data: EventObject
}

type CreateEventEventObject {
  title: String!
  description: String
  start_time: DateTime!
  end_time: DateTime!
  location: String
  event_id: String
}

type CreatedEventObject {
  success: Boolean!
  rowsAffected: Float!
  message: String!
  code: Float!
  dataCreated: CreateEventEventObject
}

type EventObjectData {
  event_id: String
  title: String
  description: String
  start_time: DateTime
  end_time: DateTime
  location: String
  created_at: DateTime
  updated_at: DateTime
  userId: String
}

type GetAllEventsObject {
  success: Boolean!
  rowsAffected: Float!
  message: String!
  code: Float!
  data: [EventObjectData!]!
}

type AuthObject {
  success: Boolean!
  rowsAffected: Float!
  message: String!
  code: Float!
  token: String
}

type Query {
  getEvents(pagination: Pagination!, filter: FilterEventsInput): GetAllEventsObject!
  getEvent(eventId: String!): GetEventObject!
}

input Pagination {
  first: Float
  offset: Float
}

input FilterEventsInput {
  title: String
  description: String
  start_time: DateTime
  end_time: DateTime
  location: String
}

type Mutation {
  signIn(authCredentials: AuthCredentials!): AuthObject!
  signUp(signUpUserInput: SignUpUserInput!): AuthObject!
  updateEvent(event_id: String!, event: UpdateEventInput!): UpdatedEventObject!
  createEvent(createEventInput: CreateEventInput!): CreatedEventObject!
  deleteEvent(event_id: String!): DeletedEventObject!
}

input AuthCredentials {
  email: String!
  password: String
}

input SignUpUserInput {
  name: String!
  email: String!
  password: String!
  cellphone: String!
}

input UpdateEventInput {
  title: String
  description: String
  start_time: DateTime
  end_time: DateTime
  location: String
}

input CreateEventInput {
  title: String!
  description: String
  start_time: DateTime!
  end_time: DateTime!
  location: String
}